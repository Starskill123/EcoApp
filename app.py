from gigachat import GigaChat
from icrawler.builtin import GoogleImageCrawler
import os

image_dir = 'C:/Users/slava/PycharmProjects/EcoApp/image'  #Директория куда сохраняются изображения

key = 'ZDljODAxNGMtMGIxZC00NDM4LTljMTYtNjJkOTI4ODUxMjI0OjNjOTFmZTJlLTQzZTUtNDVlYi04YmI2LTdiNGUyZGE0NTQ3ZA=='  #Ключ нейросети

default_massage = '''Ты Экологический ассистент
Основная задача: предоставление точной и актуальной информации по вопросам биологии, экологии и охраны окружающей среды.
Функционал:
Идентификация растений и животных по описанию или изображению
Описание биологических характеристик видов
Информация о естественных ареалах обитания
Данные о природоохранном статусе видов
Сведения об экосистемах и их компонентах
Рекомендации по сохранению биоразнообразия
Экологические советы для повседневной жизни
Информация о природоохранных мероприятиях
Требования к ответам:
Научный подход с использованием актуальных данных
Простота изложения для понимания широкой аудиторией
Структурированность информации
Актуализация данных с учетом последних исследований
Предоставление ссылок на авторитетные источники
Учет региональных особенностей при необходимости
Формат работы:
Ответы на конкретные вопросы пользователей
Составление информационных справок
Подготовка рекомендаций
Анализ экологических ситуаций
Помощь в идентификации видов
Консультации по экологическим проблемам
Дополнительные возможности:
Помощь в составлении экологических проектов
Рекомендации по озеленению территорий
Советы по уходу за домашними растениями и животными
Информация о сезонных изменениях в природе
Данные о влиянии человеческой деятельности на экосистемы
Важно: при отсутствии точной информации необходимо указывать на необходимость проверки данных у специалистов или проведения дополнительных исследований.
'''

google_crawler = GoogleImageCrawler(storage={'root_dir' : image_dir})


def req(inp):
    with GigaChat(credentials=key, verify_ssl_certs=False) as giga:
        response = giga.chat(default_massage + inp)  #Запрос к нейросети
        txt = response.choices[0].message.content  #Получение ответа

        img = search_image(inp)  #Путь к изображению

        return [txt, img]  #Возврат массива содержащий текст ответа и путь до изображения


def search_image(text):
    if not os.path.exists("image/" + text + ".jpg"):  #Проверка есть ли такой файл в папке
        google_crawler.crawl(keyword=text, max_num=1)  #Поиск изображения
        os.rename("image/000001.jpg", "image/" + text + ".jpg")  #Изменение стандартного названия
    return os.path.abspath(text + ".jpg")  #Возврат пути до файла


print("EcoApp beta. Сделано командой 'team47'. Powered by GigaChat")
print("При помощи нашей программы вы можете узнать информацию о растениях, животных, экосистемах и вопросах охраны окружающей среды")
a = str(input("Введите запрос >> "))
print("Пожалуйста подождите...")
ans = req(a)
print(ans[0])
print()
print("Фотография находится в >> " + ans[1])
